<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.Smallbox.mapper.AdminMapper">

	<!-- 관리자 페이지 - 영화 목록 조회 -->
	<select id="selectStarMovieList" resultType="com.project.Smallbox.vo.StarMovieVO">
		SELECT * 
			FROM star_movie 
		<if test='!keyword.equals("")'>
               WHERE movie_title LIKE '%${keyword}%'
        </if>
			ORDER BY 
				movie_viewer DESC
			LIMIT #{startRow}, #{listLimit}
	</select>
	
	<!-- 관리자 페이지 - 영화 갯수 조회 -->
	<select id="selectBoardListCount" resultType="int">
		SELECT COUNT(*) 
			FROM movie 
		<if test='!keyword.equals("")'>
               WHERE movie_title LIKE '%${keyword}%'
        </if>
	</select>
	
	<!-- 관리자 페이지 - 영화 상세정보 조회 -->
	<select id="selectMovie" resultType="com.project.Smallbox.vo.MovieVO">
		SELECT * 
			FROM movie 
			WHERE movie_idx = #{movie_idx}
	</select>
	
	<!-- 관리자 페이지 - 영화 삭제 -->
	<delete id="removeMovie">
		DELETE 
			FROM movie 
			WHERE movie_idx = #{movie_idx}
	</delete>
	
	<!-- 관리자 페이지 - 영화 삭제 전 등록된 파일명 조회 -->
	<select id="selectPoster" resultType="String">
		SELECT movie_picture
			FROM movie
			WHERE 
				movie_idx = #{movie_idx}
	</select>
	
	<!-- 관리자 페이지 - 영화 등록 -->
	<insert id="insertAdminMovie">
		<selectKey keyProperty="movie_idx" resultType="int" order="BEFORE">
			<!-- 가장 큰 영화번호(movie_idx) 조회 -->
			SELECT MAX(movie_idx) FROM movie
		</selectKey>
		INSERT 
			INTO movie 
			VALUES (
				#{movie_idx} + 1
				,#{movie_title}
				,#{movie_grade}
				,#{movie_genre}
				,#{movie_open_date}
				,#{movie_runtime}
				,#{movie_intro}
				,#{movie_actors}
				,#{movie_picture}
				,#{movie_real_picture}
				,#{movie_teaser}
				,#{movie_viewer}
			)
	</insert>
	
	<!-- 관리자 페이지 - 영화 수정 -->
	<update id="updateMovie">
		UPDATE movie
			SET
				movie_title = #{movie_title}
				, movie_grade = #{movie_grade}
				, movie_genre = #{movie_genre}
				, movie_open_date = #{movie_open_date}
				, movie_runtime = #{movie_runtime}
				, movie_intro = #{movie_intro}
				, movie_actors = #{movie_actors}
<!-- 			<if test='movie_picture != null and movie_picture != ""'> -->
				, movie_picture = #{movie_picture}
<!-- 			</if> -->
				, movie_real_picture = #{movie_real_picture}
				, movie_teaser = #{movie_teaser}
				, movie_viewer = #{movie_viewer}
			WHERE
				movie_idx = #{movie_idx}
	</update>
	
	<!-- 실제 파일명을 삭제 -->
	<update id="deletePoster">
		UPDATE movie
			SET movie_picture = null
			WHERE movie_idx = #{movie_idx}
	</update>
	
	
	<!-- 관리자 페이지 - 상영일정 목록 조회 -->
	<select id="selectTheaterList" resultType="com.project.Smallbox.vo.TheaterVO">
		SELECT * 
				FROM theater 
			<if test='!keyword.equals("")'>
	               WHERE theater_title LIKE '%${keyword}%'
	        </if>
	        	ORDER BY theater_date DESC
				LIMIT #{startRow}, #{listLimit}
	</select>
	
	<!-- 관리자 페이지 - 등록된 상영일정 갯수 조회 -->
	<select id="selectTheaterListCount" resultType="int">
		SELECT COUNT(*) 
			FROM theater
		<if test='!keyword.equals("")'>
               WHERE theater_title LIKE '%${keyword}%'
        </if>
	</select>
	
	<!-- 관리자 페이지 - 상영일정 등록 -->
	<insert id="insertAdminTheater">
		<selectKey keyProperty="theater_idx" resultType="int" order="BEFORE">
				SELECT MAX(theater_idx) FROM theater
			</selectKey>
			INSERT 
				INTO theater 
				VALUES (
					#{theater_idx} + 1
					,#{theater_title}
					,#{theater_date}
					,#{theater_time}
					,#{theater_seat_cnt}
				)
	</insert>
	
	<!-- 관리자 페이지 - 상영일정 등록을 위한 영화 목록 조회 -->
	<select id="selectMovie2" resultType="com.project.Smallbox.vo.MovieVO">
		SELECT * 
			FROM movie
	</select>
	
	<!-- 관리자 페이지 - 상영일정 상세정보 조회 -->
	<select id="selectTheater" resultType="com.project.Smallbox.vo.TheaterVO">
		SELECT * 
			FROM theater 
			WHERE theater_idx = #{theater_idx}
	</select>
	
	<update id="updateTheater">
		UPDATE theater
			SET
				theater_title = #{theater_title}
				, theater_date = #{theater_date}
				, theater_time = #{theater_time}
				, theater_seat_cnt = #{theater_seat_cnt}
			WHERE
				theater_idx = #{theater_idx}	
	</update>
	
	<!-- 관리자 페이지 - 상영일정 삭제 비지니스 로직 -->
	<delete id="deleteTheater">
		DELETE
			FROM theater
			WHERE theater_idx = #{theater_idx}
	</delete>
</mapper>
